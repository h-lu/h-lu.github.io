---
title: "Java 程序设计"
date: "2024-09-03"
author: "陆海波 (上海应用技术大学 经济与管理学院)"
format:
  html: 
    theme: united
    fontsize: 1.1em
    linestretch: 1.7
---



## 课程概述

本课程旨在培养学生Java编程技能和实践能力。课程内容紧密结合行业需求，注重实用性和项目经验，涵盖Java基础、数据结构与算法、数据库、网络编程、前后端开发、Spring Boot框架等。同时，课程融合AI辅助编程技术，帮助学生加速学习，提高编程效率和代码质量。通过项目驱动教学，培养学生的编程能力、团队协作和问题解决能力。

## 教学目标

- **掌握Java语言的核心语法和面向对象编程思想**
- **熟悉常用的数据结构与算法，提升编程效率**
- **具备数据库设计和操作能力，理解SQL和NoSQL**
- **掌握网络编程技术，能够开发高性能的网络应用**
- **熟练使用Spring Boot框架，具备构建微服务的能力**
- **了解前端技术，与后端进行高效交互**
- **培养代码规范和工程化开发能力**
- **熟悉AI辅助编程工具的使用，提高学习效率**
- **具备团队协作和敏捷开发的实践经验**


## 课程安排

### [第1周：课程导论与开发环境](lecture1.html)

- **内容**：
  - 课程介绍与学习方法指导
  - Java开发环境配置（JDK、IDE）
  - 代码规范与编码风格
  - AI辅助编程工具的介绍与安装
- **实践**：
  - 搭建开发环境，熟悉IDE
  - 体验AI辅助编程工具，提高代码编写效率

### [第2周：Java基础语法与面向对象编程](lecture2.html)

- **内容**：
  - 基本数据类型与运算符
  - 控制流语句
  - 类与对象的概念
  - 封装、继承、多态
- **实践**：
  - 编写基本的Java程序
  - 实现简单的面向对象模型
  - 使用AI工具自动生成类和方法的模板，加速代码编写

### [第3周：常用数据结构与算法](lecture3.html)

- **内容**：
  - 数组、链表、栈、队列
  - 哈希表、树、图的基本概念
  - 常用排序和搜索算法
  - 时间复杂度与空间复杂度分析
- **实践**：
  - 实现常用数据结构
  - 编写算法解决实际问题
  - 利用AI辅助调试和优化算法，提高代码性能

### [第4周：异常处理与调试技巧](lecture4.html)

- **内容**：
  - 异常的分类与处理机制
  - 自定义异常
  - 调试工具的使用
- **实践**：
  - 编写健壮的代码，完善异常处理
  - 使用调试工具定位和解决问题
  - 利用AI工具自动检测代码中的潜在错误

### 第5周：多线程与并发编程

- **内容**：
  - 线程的创建与管理
  - 同步机制与线程安全
  - 并发容器与原子操作
  - 高并发下的性能优化
- **实践**：
  - 开发多线程应用程序
  - 解决线程安全问题
  - 使用AI辅助分析并发问题，优化线程性能

### 第6周：I/O操作与序列化

- **内容**：
  - 输入输出流的使用
  - NIO与异步I/O
  - 对象序列化与反序列化
- **实践**：
  - 实现文件读写和网络数据传输
  - 优化I/O性能
  - 利用AI工具生成I/O处理代码，提高开发效率

### 第7周：数据库基础与JDBC编程

- **内容**：
  - 关系型数据库概述
  - SQL语句（增删改查）
  - JDBC连接与事务管理
- **实践**：
  - 设计并创建数据库
  - 使用JDBC操作数据库
  - 使用AI辅助生成SQL语句，避免常见错误

### 第8周：ORM框架与MyBatis

- **内容**：
  - ORM思想与优势
  - MyBatis框架的使用
  - 动态SQL与缓存机制
- **实践**：
  - 集成MyBatis，实现数据持久化
  - 优化数据库访问性能
  - 利用AI工具生成MyBatis配置，提高开发速度

### 第9周：Web开发基础与Servlet

- **内容**：
  - HTTP协议与请求响应机制
  - Servlet的工作原理
  - 会话管理（Cookie、Session）
- **实践**：
  - 开发简单的Web应用
  - 实现用户登录和会话管理
  - 使用AI辅助生成Servlet代码，提升编码效率

### 第10周：前端技术与交互

- **内容**：
  - HTML、CSS、JavaScript基础
  - 前后端分离架构
  - Ajax与异步通信
- **实践**：
  - 开发交互式前端页面
  - 与后端API进行数据交互
  - 利用AI工具生成前端代码，加快开发进度

### 第11周：Spring核心与Spring Boot入门

- **内容**：
  - Spring框架概述与IOC容器
  - 依赖注入与面向切面编程（AOP）
  - Spring Boot的自动配置与快速启动
- **实践**：
  - 搭建Spring Boot项目
  - 实现基础的业务逻辑
  - 使用AI辅助配置Spring Boot项目，减少配置错误

### 第12周：Spring MVC与RESTful API

- **内容**：
  - MVC设计模式
  - Spring MVC的请求处理流程
  - 构建RESTful API接口
- **实践**：
  - 开发RESTful风格的Web服务
  - 与前端进行数据交互
  - 利用AI工具生成控制器和API接口，提高开发效率

### 第13周：Spring Boot高级应用

- **内容**：
  - 集成MyBatis或JPA实现数据持久化
  - 安全框架的使用
  - 配置管理与多环境支持
- **实践**：
  - 实现完整的后端服务
  - 增加安全认证和权限控制
  - 使用AI辅助配置安全框架，确保系统安全

### 第14周：微服务架构与分布式系统

- **内容**：
  - 微服务的概念与优势
  - 服务注册与发现、配置中心
  - 分布式事务与容错机制
- **实践**：
  - 构建简单的微服务应用
  - 实现服务间的通信
  - 利用AI工具辅助微服务的设计与部署

### 第15周：项目开发与DevOps实践

- **内容**：
  - 项目需求分析与设计
  - 持续集成与持续部署（CI/CD）
  - 测试驱动开发（TDD）与单元测试
- **实践**：
  - 团队协作开发项目
  - 使用工具实现自动化构建与部署
  - 使用AI辅助编写测试用例，提高测试覆盖率

### 第16周：项目答辩与课程总结

- **内容**：
  - 项目展示与评审
  - 代码质量与性能优化
  - 职业发展与面试技巧
- **实践**：
  - 完成项目报告与源码提交
  - 模拟技术面试，分享求职经验
  - 利用AI工具进行代码审查和性能分析，优化项目


## 教学资源

- **教材推荐**：
  - 《Effective Java》（中文版）
  - 《Spring实战（第5版）》
  - 《Java并发编程实战》
- **软件工具**：
  - 开发工具：Cursor
  - 版本控制：Git
  - 构建工具：Maven、Gradle
  - 数据库：MySQL、Redis
  - 容器化：Docker
  - **AI辅助编程工具**
- **在线资源**：
  - 官方文档（Java、Spring等）
  - 技术博客与社区
  - 在线学习平台与课程

## 考核方式

- **平时成绩（50%）**：
  - 出勤 （10%）
  - 课堂参与与讨论（10%）
  - 作业与实验报告（30%）
- **项目成绩（50%）**：
  - 项目完成度与质量（30%）
  - 团队协作与贡献度（10%）
  - 项目答辩与演示（10%）

